#+TITLE: A DNS proxy preventing poisoning and CDN-friendly


*I'm looking for statically compiled binary for every platform. If you're willing to contribute, please contact me at zhina dash dns at riaqn dot org*

Available binary versions so far:
|        | Linux | MacOS | Windows |
|--------+-------+-------+---------|
| x86_64 | ✓     | ✓     |         |
| x86    |       | n/a   |         |
| ARMv7l | ✓     | n/a   |         |
| ...    |       |       |         |

Please see the Release page for downloads.

I'm developing this project because the existing
ChinaDNS occasionally behaves wierd, so I would rather write one by
myself. I'm using Haskell because of:
- high concurrency
- static type safety
- efficient development

* Overview
This program assumes:
- access to the TCP port 53 on the foreign DNS is proxy-ed(ss-redir, VPN,
  etc.), or you will still be poisoned.
- this proxy has to be the same host you use to proxy other traffic
  (http, etc.), otherwise we couldn't guarantee a CDN-optimal
  result.

The built-in resolution strategy:
1. On receiving a request, forward it to China DNS (e.g.
   =114.114.114.114=)  and foreign DNS (e.g. =8.8.8.8=) at the same
   time.
2. Check the response from China DNS first (if it fails then the
   overall resolution fails):  if it contains foreign IPv4, go to 3;
   return the result directly otherwise.
3. Return the response from foreign DNS; fails if it fails.

*Note: only TCP is used for foreign DNS.*

If you have any thoughts about the resolution strategy, please feel
free to share it on the issue page.

* Configuration
  Minimal configuration interface is provided via environment
  variables:
- =HOST= bound address, default is =127.0.0.1=
- =PORT= bound port, default is =5300=
- =ZHINA_HOST= Chinese upstream DNS address, default is =114.114.114.114=

  Please avoid using AliDNS (223.5.5.5), as they don't support queries
  based on TCP, so you may see Timeout error for some queries.
- =ZHINA_PORT= Chinese upstream DNS port, default is =53=
- =WORLD_HOST= Foreign upstream DNS port, default is =8.8.8.8=
- =WORLD_PORT= Foreign upstream DNS port, default is =53=
- =ZHINA_TIMEOUT= Timeout for Chinese DNS, UDP and TCP altogether,
  the unit is μs(microsecond), default is =1000000=
- =WORLD_TCP_TIMEOUT= Timeout for foreign DNS, TCP only, the unit is
  μs, default is =5000000=

Please fork this repository for more fine-grained modifications; feel
free to drop a pull request if you think your modifications may be also
useful to others.
- for modifications of upstream servers/local servers, see [[src/Main.hs]]
- for modifications of the resolution strategy, see [[src/ZhinaDNS.hs]]

* Running
The program reads a list of Chinese IPv4 ranges from  =stdin= on startup, the
format of which is as follows:
#+begin_example
  # this is allowed
    # this is also allowed
     
  #^ empty line (with or without spaces) is allowed
  #v ip range prefixed or suffixed with spaces is allowed
     1.0.1.0/24
  #v single ip    address is also allowed
   127.0.0.1
#+end_example

The project comes with a script [[china.awk]] generating such a list from public
database on [[ftp://ftp.ripe.net/pub/stats/apnic/][ripe.net]]. *Please modify this file and add the IPv4 of
your VPS*, and generate the list with the following command:
#+begin_src sh
curl ftp://ftp.ripe.net/pub/stats/apnic/delegated-apnic-latest | ./china.awk > china.txt
#+end_src sh
So now =china.txt= contains all Chinese IPs (along with your VPS), and we're free to go:
#+begin_src sh
  ZHINA_TIMEOUT=2000000 ./zhina-dns < china.txt
#+end_src

Since every request to =zhina-dns= involves a request to the foreign
DNS(if it's a foreign website), the latency may be quite high(as
high as 300ms), it's thus *strongly recommended* to wrap a layer of
=pdnsd= or =unbound= as DNS cache. I had some problems with =pdnsd=, so
=unbound= maybe better. An example of =unbound.conf=: 

#+begin_src yaml
server:
  verbosity: 3
  interface: 127.0.0.1
  use-syslog: yes
  username: "unbound"
  directory: "/etc/unbound"
  do-not-query-localhost: no
  
forward-zone:
  name: "."
  forward-addr: 127.0.0.1@5300
#+end_src
=do-not-query-localhost: no= overrides the restriction of =unbound= that
local servers can't be used as upstream server.

* TO DO
  Most of the following features are also TODOs of the upstream library
  [[https://github.com/riaqn/resolve][resolve]] (of which I'm also a maintainer); it would thus be quite easy
  after the upstream library has added the features.
  - EDNS support :: EDNS is already handled correctly，but the benefits
		    of EDNS(larger UDP size, etc.) are not exploited
                    fully yet
