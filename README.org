#+TITLE: 一个抗污染，同时CDN友好的DNS代理

*注意: 本软件用 Haskell 编写,对于小内存/小存储设备并不友好. 树莓派类设
备有待测试*

本软件没有配置接口,所有配置都在源代码内进行. 
- 如果要修改上游服务器,请查看 [[src/Main.hs]]
- 如果要修改解析策略,请查看 [[src/ChinaDNS.hs]]

本软件的自带解析策略:
1. 收到一个请求, 同时向国内DNS (例如 =114.114.114.114= )和国外DNS (例
   如 =8.8.8.8=)发出.
2. 先看国内DNS返回的结果(如果国内DNS失败,则直接失败), 如果包含国外IP,
   则到3,否则返回国内结果.
3. 看国外DNS返回的结果,如果国外DNS失败,则失败.

如果你解析策略有任何建议,欢迎到 issue 处提出. 

本软件在启动时会从 =stdin= 读入中国的 IPv4 列表, 格式大概如下:
#+begin_example
192.168.0.0/16
127.0.0.1
...
#+end_example

本项目自带了一个能从 [[ftp://ftp.ripe.net/pub/stats/apnic/][ripe.net]] 的公开数据库生成该文件的脚本
[[china.awk]], *请修改该文件并且加入你的VPS的IP地址*, 然后用以下命令生成中国 IPv4 列表:
#+begin_src sh
curl ftp://ftp.ripe.net/pub/stats/apnic/delegated-apnic-latest | ./china.awk > china.txt
#+end_src sh
此时 =china.txt= 里就是中国的IP了. 现在就可以运行此程序了:
#+begin_src sh
  stack exec china-dns < china.txt
#+end_src

建议在本服务的外面套一层pdnsd, 参考配置如下:
#+begin_example
  server {
          label= "china-dns";
          ip = 127.0.0.1;
          port = 5300;
          edns_query=off;
          timeout=5;     
          purge_cache=off; 
  }
  server {
          label= "upstream";
          file = "/etc/resolv.conf.upstream"; 
          timeout=1;
          caching=off;
  }
#+end_example
这样在 =china-dns= 失败后, pdnsd会临时返回 ISP 提供的IP而不做cache.


